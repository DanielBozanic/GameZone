Object subclass: #BusinessReportAPI	instanceVariableNames: ''	classVariableNames: ''	package: 'business-report'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BusinessReportAPI class	instanceVariableNames: ''!!BusinessReportAPI class methodsFor: 'building' stamp: 'GameZone 8/5/2022 22:56'!build	Teapot stopAll.	Teapot on		after: '/*' -> [:req :resp | resp headers at: 'Access-Control-Allow-Origin' put: '*'];		GET: '/api/businessReports/getSoldVideoGamesByPlatform' -> [ :req | self getSoldVideoGamesByPlatform ];		start.! !!BusinessReportAPI class methodsFor: 'accessing' stamp: 'GameZone 8/5/2022 22:58'!getSoldVideoGamesByPlatform	   | login accessor collection numSoldVideoGamesByPlatform numSoldVideoGamesByPlatformJson|	   PharoDatabaseAccessor DefaultDriver: NativeMySQLDriver.   login := Login new	  database: MySQLPlatform new;	  username: 'testuser';	  password: 'PassWord_FOR_NTP!!';	  host: 'localhost';	  port: '3306';	  databaseName: 'product-db';	  connectString: 'localhost:3306_product-db'.   accessor := DatabaseAccessor forLogin: login.   accessor login.   accessor isLoggedIn.   collection := accessor basicExecuteSQLString: 		'SELECT video_games.platform, SUM(product_purchase_details.product_quantity) 		 FROM product_purchases 		 JOIN product_purchase_details ON product_purchases.id = product_purchase_details.product_purchase_id 		 JOIN video_games ON product_purchase_details.product_id = video_games.product_id 		 WHERE product_purchases.is_paid_for = true 		 GROUP BY video_games.platform'.   numSoldVideoGamesByPlatform := Dictionary new.   collection do: [ :each | numSoldVideoGamesByPlatform at: (each at: 1) put: (each at: 2) ].	   numSoldVideoGamesByPlatformJson := NeoJSONWriter toString: numSoldVideoGamesByPlatform.   ^numSoldVideoGamesByPlatformJson! !